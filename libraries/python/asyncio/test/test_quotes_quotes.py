# coding: utf-8

"""
    Tradier API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import tradier_asyncio
from tradier_asyncio.models.quotes_quotes import QuotesQuotes  # noqa: E501
from tradier_asyncio.rest import ApiException

class TestQuotesQuotes(unittest.TestCase):
    """QuotesQuotes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test QuotesQuotes
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = tradier_asyncio.models.quotes_quotes.QuotesQuotes()  # noqa: E501
        if include_optional :
            return QuotesQuotes(
                quote = [
                    tradier_asyncio.models.quote.quote(
                        symbol = '0', 
                        description = '0', 
                        exch = '0', 
                        type = 'stock', 
                        last = 1.337, 
                        change = 1.337, 
                        volume = 1.337, 
                        open = 1.337, 
                        high = 1.337, 
                        low = 1.337, 
                        close = 1.337, 
                        bid = 1.337, 
                        ask = 1.337, 
                        change_percentage = 1.337, 
                        average_volume = 1.337, 
                        last_volume = 1.337, 
                        trade_date = 1.337, 
                        prevclose = 1.337, 
                        week_52_high = 1.337, 
                        week_52_low = 1.337, 
                        bidsize = 1.337, 
                        bidexch = '0', 
                        bid_date = 1.337, 
                        asksize = 1.337, 
                        askexch = '0', 
                        ask_date = 1.337, 
                        root_symbols = '0', 
                        root_symbol = '0', 
                        underlying = '0', 
                        strike = 1.337, 
                        open_interest = 1.337, 
                        contract_size = 1.337, 
                        expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        expiration_type = '0', 
                        option_type = 'put', )
                    ]
            )
        else :
            return QuotesQuotes(
        )

    def testQuotesQuotes(self):
        """Test QuotesQuotes"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
