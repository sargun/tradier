openapi: 3.0.1
info:
  version: 'v1'
  title: Tradier API
# Added by API Auto Mocking Plugin
servers:
  - description: Tradier Sandbox
    url: https://sandbox.tradier.com/v1
components:
  schemas:
    streamingSummary:
      type: object
      properties:
        high:
          type: number
        low:
          type: number
        open:
          type: number
        prevClose:
          type: number
        symbol:
          $ref: '#/components/schema/symbol'
        type:
          type: string
    streamingQuote:
      type: object
      properties:
        ask:
          type: number
        askdate:
          type: string
          pattern: '^[0-9]+$'
        askexch:
          type: string
        asksz:
          type: number
        bid:
          type: number
        biddate:
          type: string
          pattern: '^[0-9]+$'
        bidexch:
          type: string
        symbol:
          $ref: '#/components/schema/symbol'
        type:
          type: string
    streamingTrade:
      type: object
      properties:
        cvol:
          type: string
          pattern: '^[0-9]+$'
        date:
          type: string
          pattern: '^[0-9]+$'
        last:
          type: string
        price:
          type: string
        size:
          type: string
        symbol:
          $ref: '#/components/schema/symbol'
        exch:
          type: string
        type:
          type: string
    streamingTimesale:
      type: object
      properties:
        symbol:
          $ref: '#/components/schema/symbol'
        exch:
          type: string
        bid:
          type: string
          pattern: '^[0-9]+$'
        ask:
          type: string
          pattern: '^[0-9]+$'
        last:
          type: string
          pattern: '^[0-9]+$'
        size:
          type: string
          pattern: '^[0-9]+$'
        date:
          type: string
          pattern: '^[0-9]+$'
        seq:
          type: number
        flag:
          type: string
        cancel:
          type: boolean
        correction:
          type: boolean
        session:
          type: string
    streamingTradex:
      type: object
      properties:
        cvol:
          type: string
          pattern: '^[0-9]+$'
        date:
          type: string
          pattern: '^[0-9]+$'
        last:
          type: string
        price:
          type: string
        size:
          type: string
        exch:
          type: string
        symbol:
          $ref: '#/components/schema/symbol'
        type:
          type: string
    profile:
      '$ref': './profile.yaml'
    quote:
      '$ref': './quote.yaml'
    quotes:
      type: object
      properties:
        quotes:
          type: object
          properties:
            quote:
              type: array
              items:
                '$ref': '#/components/schemas/quote'
    symbol:
      '$ref': './symbol.yaml'
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
paths:
  /markets/quotes:
    post:
      description: |
        Get a list of symbols using a keyword lookup on the symbols description. Results are in descending order by average volume of the security. This can be used for simple search functions.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required: [symbols]
              properties:
                symbols:
                  type: array
                  items:
                    $ref: "#/components/schemas/symbol"
                greeks:
                  default: false
                  type: boolean
      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/quotes"
    get:
      description: |
        Get a list of symbols using a keyword lookup on the symbols description. Results are in descending order by average volume of the security. This can be used for simple search functions.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: symbols
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/symbol"
          style: simple
          explode: false
        - in: query
          name: greeks
          schema:
            type: boolean
      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/quotes"
  /markets/options/chains:
    get:
      description: |
        Get all quotes in an option chain. Greek and IV data is included courtesy of ORATS. Please check out their APIs for more in-depth options data.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: symbol
          schema:
            $ref: "#/components/schemas/symbol"
          required: true
        - in: query
          name: expiration
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: greeks
          schema:
            type: boolean
      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  options:
                    type: object
                    properties:
                      option:
                        type: array
                        items:
                          type: object
                          properties:
                            symbol:
                              type: string
                            description:
                              type: string
                            exch:
                              type: string
                            last:
                              type: number
                            change:
                              type: number
                            volume:
                              type: number
                            open:
                              type: number
                            high:
                              type: number
                            low:
                              type: number
                            close:
                              type: number
                            bid:
                              type: number
                            ask:
                              type: number
                            underlying:
                              $ref: "#/components/schemas/symbol"
                            strike:
                              type: number
                            change_percentage:
                              type: number
                            average_volume:
                              type: number
                            last_volume:
                              type: number
                            trade_date:
                              type: number
                            prevclose:
                              type: number
                            week_52_high:
                              type: number
                            week_52_low:
                              type: number
                            bidsize:
                              type: number
                            bidexch:
                              type: string
                            bid_date:
                              type: number
                              description: unix time
                            asksize:
                              type: number
                            ask_date:
                              type: number
                            open_interest:
                              type: number
                            contract_size:
                              type: number
                            expiration_date:
                              type: string
                              format: date
                            expiration_type:
                              type: string
                              enum: [standard, weeklys, eom]
                            option_type:
                              type: string
                              enum: [call, put]
                            root_symbol:
                              $ref: "#/components/schemas/symbol"
                            greeks:
                              # I give no fucks about the greeks
                              type: object

  /markets/options/expirations:
    get:
      description: |
        Get expiration dates for a particular underlying.

        Note that some underlying securities use a different symbol for their weekly options (RUT/RUTW, SPX/SPXW). To make sure you see all expirations, make sure to send the includeAllRoots parameter. This will also ensure any unique options due to corporate actions (AAPL1) are returned.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: symbol
          schema:
            $ref: "#/components/schemas/symbol"
          required: true
          description: Underlying symbol of the chain
        - in: query
          name: includeAllRoots
          schema:
            type: boolean
            default: false
          required: false
          description: Send expirations related to all option roots
        - in: query
          name: strikes
          schema:
            type: boolean
            default: false
          required: false

      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [expirations]
                properties:
                  expirations:
                    type: object
                    properties:
                      date:
                        type: array
                        items:
                          type: string
                          format: date
                      expiration:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                            strikes:
                              type: object
                              properties:
                                strike:
                                  type: array
                                  items:
                                    type: number

  /markets/options/strikes:
    get:
      description: |
        Get an options strike prices for a specified expiration date.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: symbol
          schema:
            type: string
          required: true
          description: Underlying symbol of the chain
          # TODO: Determine format
        - in: query
          name: expiration
          schema:
            type: string
            format: date
      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  strikes:
                    type: object
                    properties:
                      strike:
                        type: array
                        items:
                          type: number
                          format: float
  /markets/options/lookup:
    get:
      description: |
        Get all options symbols for the given underlying. This will include additional option roots (ex. SPXW, RUTW) if applicable.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: underlying
          schema:
            type: string
          required: true
          description: Underlying symbol of the chain
          # TODO: Determine format
      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbols:
                    type: array
                    items:
                      type: object
                      properties:
                        rootSymbol:
                          $ref: "#/components/schemas/symbol"
                        options:
                          type: array
                          items:
                            type: string
  /user/profile:
    get:
      description: |
        The user’s profile contains information pertaining to the user and his/her accounts. In addition to listing all the accounts a user has, this call should be used to create a personalized experience for your customers (i.e. displaying their name when they log in).
      security:
        - BearerAuth: []
      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile'
  /markets/events/session:
    post:
      description: |
        Create a streaming session for use with the Tradier Streaming API. This session can be used with the streaming endpoints to obtain updates to the market as they happen.
      security:
        - BearerAuth: []
      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  stream:
                    type: object
                    properties:
                      url:
                        type: string
                        format: uri
                      sessionid:
                        type: string
                        format: uuid

  /markets/history:
    get:
      description: |
        Get historical pricing for a security. This data will usually cover the entire lifetime of the company if sending reasonable start/end times. You can fetch historical pricing for options by passing the OCC option symbol (ex. AAPL220617C00270000) as the symbol.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: symbol
          schema:
            $ref: '#/schema/components/symbol'
          required: true
        - in: query
          name: interval
          schema:
            type: string
            enum: [daily, weekly, monthly]
        - in: query
          name: start
          schema:
            type: string
            format: date
        - in: query
          name: end
          schema:
            type: string
            format: date
      responses:
        '2XX':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: object
                    properties:
                      day:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                            open:
                              type: number
                              format: float
                            high:
                              type: number
                              format: float
                            low:
                              type: number
                              format: float
                            close:
                              type: number
                              format: float
                            volume:
                              type: number
                              format: int64

security:
  - BearerAuth: []